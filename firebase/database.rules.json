{
  "rules": {
    "products": {
      ".read": true,
      ".write": "auth != null && (root.child('admins').child(auth.uid).exists() || root.child('users').child(auth.uid).child('role').val() == 'admin')",
      "$productId": {
        ".validate": "newData.hasChildren(['name', 'price', 'category', 'description', 'inventory', 'active'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "price": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "category": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length <= 1000"
        },
        "inventory": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "active": {
          ".validate": "newData.isBoolean()"
        },
        "images": {
          ".validate": "newData.hasChildren()",
          "$imageIndex": {
            ".validate": "newData.isString()"
          }
        },
        "specifications": {
          "$spec": {
            ".validate": "newData.isString()"
          }
        },
        "tags": {
          "$tag": {
            ".validate": "newData.isString()"
          }
        }
      }
    },

    "categories": {
      ".read": true,
      ".write": "auth != null && (root.child('admins').child(auth.uid).exists() || root.child('users').child(auth.uid).child('role').val() == 'admin')",
      "$categoryId": {
        ".validate": "newData.hasChildren(['name', 'active'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length <= 200"
        },
        "active": {
          ".validate": "newData.isBoolean()"
        },
        "image": {
          ".validate": "newData.isString()"
        }
      }
    },

    "users": {
      "$userId": {
        ".read": "auth != null && (auth.uid == $userId || root.child('admins').child(auth.uid).exists())",
        ".write": "auth != null && auth.uid == $userId",
        ".validate": "newData.hasChildren(['email', 'displayName', 'createdAt'])",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/)"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
        },
        "phoneNumber": {
          ".validate": "newData.isString() && newData.val().matches(/^[0-9]{10}$/)"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "role": {
          ".write": "root.child('admins').child(auth.uid).exists()",
          ".validate": "newData.val() == 'user' || newData.val() == 'admin'"
        },
        "addresses": {
          "$addressId": {
            ".validate": "newData.hasChildren(['street', 'city', 'state', 'zipCode', 'country'])",
            "street": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 200"
            },
            "city": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
            },
            "state": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
            },
            "zipCode": {
              ".validate": "newData.isString() && newData.val().matches(/^[0-9]{6}$/)"
            },
            "country": {
              ".validate": "newData.isString() && newData.val() == 'India'"
            },
            "isDefault": {
              ".validate": "newData.isBoolean()"
            }
          }
        }
      }
    },

    "orders": {
      ".indexOn": ["userId", "status", "createdAt"],
      "$orderId": {
        ".read": "auth != null && (data.child('userId').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".write": "auth != null && (data.child('userId').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".validate": "newData.hasChildren(['userId', 'items', 'totalAmount', 'status', 'createdAt'])",
        "userId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "items": {
          "$itemIndex": {
            ".validate": "newData.hasChildren(['productId', 'quantity', 'price', 'name'])",
            "productId": {
              ".validate": "newData.isString()"
            },
            "quantity": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "price": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "name": {
              ".validate": "newData.isString()"
            }
          }
        },
        "totalAmount": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "status": {
          ".validate": "newData.val() == 'pending' || newData.val() == 'confirmed' || newData.val() == 'processing' || newData.val() == 'shipped' || newData.val() == 'delivered' || newData.val() == 'cancelled'"
        },
        "paymentId": {
          ".validate": "newData.isString()"
        },
        "address": {
          ".validate": "newData.hasChildren(['street', 'city', 'state', 'zipCode'])"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "updatedAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "reviews": {
      ".indexOn": ["productId", "userId", "createdAt"],
      "$reviewId": {
        ".read": true,
        ".write": "auth != null && (data.child('userId').val() == auth.uid || root.child('admins').child(auth.uid).exists())",
        ".validate": "newData.hasChildren(['productId', 'userId', 'rating', 'comment', 'createdAt'])",
        "productId": {
          ".validate": "newData.isString() && root.child('products').child(newData.val()).exists()"
        },
        "userId": {
          ".validate": "newData.isString() && newData.val() == auth.uid"
        },
        "rating": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 5"
        },
        "comment": {
          ".validate": "newData.isString() && newData.val().length <= 500"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "helpful": {
          "$userId": {
            ".validate": "newData.isBoolean()"
          }
        }
      }
    },

    "admins": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "$adminId": {
        ".validate": "newData.hasChildren(['email', 'createdAt'])"
      }
    },

    "inventory": {
      ".read": "auth != null && root.child('admins').child(auth.uid).exists()",
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "$productId": {
        ".validate": "newData.hasChildren(['stock', 'lowStockAlert', 'lastUpdated'])",
        "stock": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "lowStockAlert": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "lastUpdated": {
          ".validate": "newData.isNumber()"
        }
      }
    },

    "carts": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        ".write": "auth != null && auth.uid == $userId",
        "$productId": {
          ".validate": "newData.hasChildren(['quantity', 'addedAt'])",
          "quantity": {
            ".validate": "newData.isNumber() && newData.val() > 0"
          },
          "addedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },

    "wishlists": {
      "$userId": {
        ".read": "auth != null && auth.uid == $userId",
        ".write": "auth != null && auth.uid == $userId",
        "$productId": {
          ".validate": "newData.hasChildren(['addedAt'])",
          "addedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },

    "settings": {
      ".read": true,
      ".write": "auth != null && root.child('admins').child(auth.uid).exists()",
      "app": {
        "maintenance": {
          ".validate": "newData.isBoolean()"
        },
        "minOrderAmount": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "taxRate": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "shippingCharge": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        }
      }
    },

    "$other": {
      ".read": false,
      ".write": false
    }
  }
}